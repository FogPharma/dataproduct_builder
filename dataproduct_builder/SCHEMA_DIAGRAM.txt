┌─────────────────────────────────────────────────────────────────────────────────┐
│                           DataProduct Builder Package                          │
│                              Architecture Schema                               │
└─────────────────────────────────────────────────────────────────────────────────┘

                                    │
                                    ▼
┌─────────────────────────────────────────────────────────────────────────────────┐
│                              __init__.py                                       │
│                        (Package Interface & Exports)                          │
│  • Version: 0.1.0                                                             │
│  • Author: FogPharma Data Science Team                                        │
│  • Exports: 25+ functions across 4 modules                                    │
└─────────────────────────────────────────────────────────────────────────────────┘
                                    │
                    ┌───────────────┼───────────────┐
                    ▼               ▼               ▼
┌─────────────────────────┐ ┌─────────────────┐ ┌─────────────────────────┐
│        cli.py           │ │ config_executor │ │     Core Modules        │
│   (Command Line)        │ │  (Orchestrator) │ │                         │
│ • process               │ │ • OPERATION_MAP │ │ • column_ops.py         │
│ • create-config         │ │ • load_config   │ │ • row_ops.py            │
│ • list-operations       │ │ • execute_step  │ │ • frame_ops.py          │
│                         │ │ • run_pipeline  │ │ • quality_checks.py     │
└─────────────────────────┘ └─────────────────┘ └─────────────────────────┘
                                    │                       │
                                    ▼                       ▼
                    ┌─────────────────────────────────────────────────────────┐
                    │                OPERATION_MAP                           │
                    │              (47 Operations)                          │
                    │  ┌─────────────────────────────────────────────────┐   │
                    │  │ Column Ops: 7    Row Ops: 7    Frame Ops: 5    │   │
                    │  │ Quality: 4       Total: 47                     │   │
                    │  └─────────────────────────────────────────────────┘   │
                    └─────────────────────────────────────────────────────────┘
                                    │
                    ┌───────────────┼───────────────┐
                    ▼               ▼               ▼
┌─────────────────────────┐ ┌─────────────────┐ ┌─────────────────────────┐
│     column_ops.py       │ │    row_ops.py   │ │     frame_ops.py        │
│    (7 Functions)        │ │   (7 Functions) │ │    (5 Functions)        │
│                         │ │                 │ │                         │
│ • rename_columns        │ │ • drop_duplicates│ │ • aggregate_dataframe   │
│ • drop_columns          │ │ • filter_rows   │ │ • aggregate_with_       │
│ • concat_and_pad_aas    │ │ • sort_rows     │ │   custom_functions      │
│ • add_punctuation_      │ │ • sample_rows   │ │ • aggregate_with_       │
│   staples_and_stitches  │ │ • shuffle_rows  │ │   column_functions      │
│ • assign_class_labels   │ │ • validate_rows │ │ • aggregate_peptide_    │
│ • concatenate_stitches_ │ │ • remove_empty_ │ │   data                  │
│   and_staples           │ │   rows          │ │ • apply_pandas_function │
│ • concatenate_stitches_ │ │                 │ │ • apply_numpy_function  │
│   and_staples2          │ │                 │ │                         │
└─────────────────────────┘ └─────────────────┘ └─────────────────────────┘
                                    │
                                    ▼
                    ┌─────────────────────────┐
                    │   quality_checks.py     │
                    │    (4 Functions)        │
                    │                         │
                    │ • check_row_count       │
                    │ • check_column_count    │
                    │ • check_missing_values  │
                    │ • check_data_types      │
                    └─────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────────┐
│                           Configuration System                                  │
└─────────────────────────────────────────────────────────────────────────────────┘
                                    │
                                    ▼
┌─────────────────────────────────────────────────────────────────────────────────┐
│                            JSON/YAML Config                                     │
│  ┌─────────────────────────────────────────────────────────────────────────┐   │
│  │ {                                                                       │   │
│  │   "input_path": "data/input.csv",                                      │   │
│  │   "output_path": "data/output.csv",                                    │   │
│  │   "steps": [                                                           │   │
│  │     {                                                                  │   │
│  │       "operation": "filter_rows",                                      │   │
│  │       "params": {                                                      │   │
│  │         "column": "score",                                             │   │
│  │         "operator": ">",                                               │   │
│  │         "value": 0.5                                                   │   │
│  │       }                                                                │   │
│  │     },                                                                 │   │
│  │     {                                                                  │   │
│  │       "operation": "aggregate_with_column_functions",                  │   │
│  │       "params": {                                                      │   │
│  │         "groupby_cols": "Parent ID",                                  │   │
│  │         "column_functions": {                                          │   │
│  │           "ID": "set_join",                                            │   │
│  │           "Score": "median"                                            │   │
│  │         }                                                              │   │
│  │       }                                                                │   │
│  │     }                                                                  │   │
│  │   ]                                                                    │   │
│  │ }                                                                      │   │
│  └─────────────────────────────────────────────────────────────────────────┘   │
└─────────────────────────────────────────────────────────────────────────────────┘
                                    │
                                    ▼
┌─────────────────────────────────────────────────────────────────────────────────┐
│                        config_executor.py                                       │
│  ┌─────────────────────────────────────────────────────────────────────────┐   │
│  │ • load_config()         - Load and parse JSON/YAML files               │   │
│  │ • validate_config()     - Validate configuration structure             │   │
│  │ • execute_step()        - Execute individual pipeline steps            │   │
│  │ • run_from_config()     - Run complete data processing pipeline        │   │
│  │ • OPERATION_MAP         - Maps operation names to functions            │   │
│  │ • Error handling        - Comprehensive error handling and logging     │   │
│  └─────────────────────────────────────────────────────────────────────────┘   │
└─────────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────────┐
│                              Data Flow                                          │
└─────────────────────────────────────────────────────────────────────────────────┘
                                    │
                    ┌───────────────┼───────────────┐
                    ▼               ▼               ▼
┌─────────────────────────┐ ┌─────────────────┐ ┌─────────────────────────┐
│      Input Data         │ │   Processing    │ │     Output Data         │
│                         │ │                 │ │                         │
│ • CSV Files             │ │ • Load Data     │ │ • Processed CSV         │
│ • Excel Files (.xlsx)   │ │ • Apply Ops     │ │ • Excel Files           │
│ • JSON Files            │ │ • Validate      │ │ • JSON Files            │
│ • Various formats       │ │ • Transform     │ │ • Logs & Reports        │
│                         │ │ • Aggregate     │ │ • Error Reports         │
└─────────────────────────┘ └─────────────────┘ └─────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────────┐
│                           Key Features                                          │
└─────────────────────────────────────────────────────────────────────────────────┘

🎯 Core Capabilities:
• 47 Operations across 4 specialized modules
• Configuration-driven pipelines (JSON/YAML)
• CLI Interface with 3 main commands
• Multiple file format support (CSV, Excel, JSON)
• Specialized peptide sequence processing

🔧 Technical Features:
• Modular architecture with clear separation of concerns
• Type hints throughout codebase
• Comprehensive error handling and logging
• Editable installation support (pip install -e .)
• Professional packaging with pyproject.toml

🧬 Domain Expertise:
• Peptide sequence analysis with specialized functions
• Amino acid processing (concatenation, padding)
• Staple/stitch handling for peptide chemistry
• Custom aggregation functions for biological data
• Data quality validation for research datasets

📊 Usage Patterns:
1. Direct Function Calls: dpb.rename_columns(df, mapping)
2. Configuration Pipeline: dpb.run_from_config("config.json")
3. CLI Usage: dataproduct-builder process config.json

┌─────────────────────────────────────────────────────────────────────────────────┐
│                        Package Dependencies                                     │
└─────────────────────────────────────────────────────────────────────────────────┘

Core Dependencies:
• pandas >= 1.5.0      - Data manipulation and analysis
• numpy >= 1.21.0      - Numerical computing
• typer >= 0.9.0       - CLI framework
• pyyaml >= 6.0        - YAML configuration support
• openpyxl >= 3.0.0    - Excel file support

Development Dependencies:
• pytest >= 7.0.0      - Testing framework
• black >= 22.0.0      - Code formatting
• flake8 >= 5.0.0      - Linting
• mypy >= 1.0.0        - Type checking

┌─────────────────────────────────────────────────────────────────────────────────┐
│                           File Structure                                        │
└─────────────────────────────────────────────────────────────────────────────────┘

dataproduct_builder/
├── src/dataproduct_builder/
│   ├── __init__.py              # Package interface and exports
│   ├── cli.py                   # Command-line interface
│   ├── config_executor.py       # Pipeline orchestration
│   ├── column_ops.py            # Column manipulation functions
│   ├── row_ops.py               # Row manipulation functions
│   ├── frame_ops.py             # DataFrame operations
│   └── quality_checks.py        # Data validation functions
├── pyproject.toml               # Package configuration
├── requirements.txt             # Core dependencies
├── INSTALLATION.md              # Installation guide
├── CONFIG_USAGE.md              # Configuration documentation
├── PACKAGE_SCHEMA.md            # This schema documentation
├── example_*.json               # Example configuration files
└── tests/                       # Test suite (to be added)

This schema represents a well-architected, production-ready package for data processing
with specialized capabilities for peptide analysis and general data manipulation.
